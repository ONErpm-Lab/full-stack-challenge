version: "3.9"

services:

  main-database:
    container_name: main-database
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_DATABASE: main
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./.main-database:/var/lib/mysql
    expose:
      - 3306

  secondary-database:
    container_name: secondary-database
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_TCP_PORT: 3307
      MYSQL_DATABASE: secondary
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./.secondary-database:/var/lib/mysql
    expose:
      - 3307

  adminer:
    container_name: adminer
    image: adminer:latest
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - main-database
      - secondary-database

  backend:
    container_name: backend
    image: full-stack-challenge-backend
    build:
      context: .
      dockerfile: Dockerfile-backend
    restart: always
    working_dir: "/backend"
    command: tail -f /dev/null
    # command: sh -c "
    #     composer install && composer update --with-dependencies &&
    #     php artisan vendor:publish --tag=request-docs-config &&
    #     php artisan optimize:clear && php artisan lrd:generate &&
    #     php artisan migrate && php artisan serve --host=0.0.0.0"
    ports:
      - 8000:8000
    volumes:
      - ./backend:/backend
    depends_on:
      - adminer

  frontend:
    container_name: full-stack-challenge-frontend
    image: node:lts-alpine
    working_dir: "/frontend"
    command: sh -c "npm i && npm start"
    ports:
      - 4200:4200
    volumes:
      - ./frontend:/frontend
    depends_on:
      - backend
